getopt使用示例
int getopt_long(int argc, char * const argv[], const char *optstring, const struct option *longopts, int *longindex);
与getopt相比，既可处理短选项,也可处理长选项，例如-a和--add

参数：
argc：main()函数传递过来的参数的个数
argv：main()函数传递过来的参数的字符串指针数组
optstring：短选项字符串，告知 getopt_long()可以处理哪个短选项以及哪个选项需要参数
longopts: struct option数组，告知getopt_long()可以处理哪个长选项以及哪个选项需要参数
longindex:当前选项在struct option数组中的索引

optstring的格式意义:
char*optstring = “ab:c::”;
单个字符a         表示选项a没有参数            格式：-a即可，不加参数
单字符加冒号b:     表示选项b有且必须加参数      格式：-b 100或-b100,但-b=100错
单字符加2冒号c::   表示选项c可以有，也可以无     格式：-c200，其它格式错误

struct option成员意义：
name: 长选项名称
has_arg: 指定该选项是否需要参数。可以是 no_argument、required_argument 或 optional_argument
flag: 如果为 NULL，则 getopt_long返回val；如果不为 NULL，则将 val 赋给 flag 并返回 0
val: 与选项关联的值，当选项被解析时将其返回或者赋给 flag

系统全局变量及意义：
optarg —— 指向当前选项参数(如果有)的指针。
optind —— 再次调用 getopt() 时的下一个 argv指针的索引。
optopt —— 最后一个未知选项。
opterr ­—— 如果不希望getopt()打印出错信息，则只要将全域变量opterr设为0即可)))
